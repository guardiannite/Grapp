@model Grapp.Models.CharacterHistoryModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4 style="color:red">Graph coming soon...</h4>
<div id="chart"></div>
<br />
<form class="form-horizontal" role="form" action="">
    @if(Model.ErrorMessage != null)
    {
        <div class="alert alert-danger">
            @Model.ErrorMessage
        </div>
    }
    <div class="form-group">
        <label for="inputPlayerName" class="col-sm-2 control-label">Search for a player:</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" id="inputPlayerName" name="playerName" placeholder="Player name">
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <button type="submit" class="btn btn-default">Search</button>
        </div>
    </div>
</form>
<div class="col-md-6">
    <p>
        Last Update occurred on @Model.LastUpdate.ToLocalTime().ToShortDateString() @Model.LastUpdate.ToLocalTime().ToLongTimeString() <br/>
        Most recent update occurred on @Model.CurrentUpdate.ToLocalTime().ToShortDateString() @Model.CurrentUpdate.ToLocalTime().ToLongTimeString()
    </p>
</div>
<table class="table">
    <tr>
        <th>Skill</th>
        <th>Level</th>
        <th>Experience</th>
    </tr>
    @for(int i = 0; i < Math.Min(Model.Highscores.Count, Model.SkillIncrease.Count); i++)
    {
        var skill = Model.Highscores.ElementAt(i);
        var difference = Model.SkillIncrease.ElementAt(i);
        <tr class="@(@difference.Experience > 0 ? "success" : "")">
            <td>@skill.SkillType.ToString("f")</td>
            <td>@(skill.Level.ToString("#,##0"))           (+@(difference.Level.ToString("#,##0")))</td>
            <td>@(skill.Experience.ToString("#,##0"))           (+@(difference.Experience.ToString("#,##0")))</td>
        </tr>
    }
</table>

@section Scripts{
<script>
    var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "June",
  "July", "Aug", "Sept", "Oct", "Nov", "Dec"
    ];

    var chart = c3.generate({
        bindto: '#chart',
        data: {
            x: 'x',
            //xFormat: '%Y%m%d', // 'xFormat' can be used as custom format of 'x'
            columns: [
                ['x', '2015-01-01', '2015-01-25', '2015-03-03', '2015-04-17', '2015-05-05', '2015-06-10'],
                //['x', '20130101', '20130102', '20130103', '20130104', '20130105', '20130106'],
                ['Attack', 55, 58, 59, 63, 67, 71],
                ['Strength', 60, 61, 65, 66, 66, 67],
                ['Defence', 52, 53, 55, 64, 64, 64],
                ['Herblore', 35, 36, 42, 51, 51, 53],
                ['Theiving', 38, 44, 45, 45, 47, 50],
                ['Fletching', 45, 47, 55, 58, 66, 74],
            ]
        },
        axis: {
            x: {
                type: 'timeseries',
                tick: {
                    format: function (x) { return x.getDate() + " " +monthNames[x.getMonth()] + " " + x.getFullYear() }
                }
            }
        }
    });
    </script>
}


